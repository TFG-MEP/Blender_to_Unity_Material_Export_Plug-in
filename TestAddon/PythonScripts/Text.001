import bpy

def dfs(node, visited):
    visited.add(node)
    print("Nombre del nodo:", node.name)

    # Recorre los nodos conectados
    for input_socket in node.inputs:
        for link in input_socket.links:
            next_node = link.from_node
            if next_node not in visited:
                dfs(next_node, visited)

# Obtiene una referencia al objeto que tiene el material
obj = bpy.context.object  # Cambia esto al nombre o índice de tu objeto

# Asegúrate de que el objeto tenga un material
if obj.data.materials:
    # Accede al primer material asignado al objeto (índice 0)
    material = obj.data.materials[0]

    # Accede al nodo del material en el Shader Editor
    material.use_nodes = True
    node_tree = material.node_tree
    nodes = node_tree.nodes

    # Nodo raíz (puedes cambiarlo según tus necesidades)
    root_node = nodes.get("Shader Output")
    if root_node:
        visited = set()
        dfs(root_node, visited)

# Guarda los cambios
bpy.ops.wm.save_mainfile(filepath=bpy.data.filepath)
