float4 rgb_ramp_lookup(float4 ramp[30],float pos[30],int numcolors, float at, int interpolate, int extrapolate)
{
              float f = at;
              int table_size = numcolors;
            
              if ((f < 0.0 || f > 1.0) && extrapolate) {
                float4 t0, dy;
                if (f < 0.0) {
                  t0 = ramp[0];
                  dy = t0 - ramp[1];
                  f = -f;
                }
                else {
                  t0 = ramp[table_size - 1];
                  dy = t0 - ramp[table_size - 2];
                  f = f - 1.0;
                }
                return t0 + dy * f * (table_size - 1);
              }
            f  = clamp(at, 0.0, 1.0) ;
            float4 result=ramp[0];
            if(f>=pos[numcolors-1]){
                return ramp[numcolors-1];
            }
    
            for (int i = 0; i < numcolors - 1; ++i) {
                if (f  >= pos[i] && f  <= pos[i + 1]){
                    if (interpolate){
                        result=ramp[i];
                        float t = (f - (float)pos[i])/(pos[i+1]-pos[i]);
                        result = (1.0 - t) * result + t * ramp[i + 1];
                    } 
                    else{
                        result= ramp[i];
                    }
                   
                }
            }
              
            return result;
}